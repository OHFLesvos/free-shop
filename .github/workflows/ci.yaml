name: CI

on:
  push:
    branches: [ production ]

jobs:
  deploy-to-prod:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Log git hash
      shell: bash
      run: |
        git rev-parse --short "$GITHUB_SHA" > .git_hash
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist  --optimize-autoloader --no-dev
    - name: Enable maintenance mode on remote
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        port: ${{ secrets.REMOTE_PORT }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd ${{ secrets.REMOTE_TARGET }}
          if [ -f .env ]; then php artisan down; fi
    - name: Deploy to remote
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        ARGS: "-rltgoDzvO --delete --exclude '.env' --exclude '.git' --exclude 'storage/app/' --exclude 'storage/framework/' --exclude 'storage/logs/'"
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        TARGET: ${{ secrets.REMOTE_TARGET }}
    - name: Publish on remote
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        port: ${{ secrets.REMOTE_PORT }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd ${{ secrets.REMOTE_TARGET }}
          php artisan optimize
          php artisan migrate --force
          php artisan storage:link
          php artisan up
